name: Build and Deploy
on:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest 
    steps:
    - uses: actions/checkout@v1
    - name: Build
      run: |
        sha=${GITHUB_SHA:0:7}
        app="${GITHUB_REPOSITORY#*/}"
        docker build -t docker.pkg.github.com/$GITHUB_REPOSITORY/$app:$sha .        
    - name: Push
      run: |
        sha=${GITHUB_SHA:0:7}
        app="${GITHUB_REPOSITORY#*/}"
        docker login docker.pkg.github.com -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }}
        docker push docker.pkg.github.com/$GITHUB_REPOSITORY/$app:$sha
 
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Setup python
      uses: actions/setup-python@v1 
      with:
        python-version: '3.x'
        architecture: 'x64' 
    - name: VKS context
      uses: ventus-ag/vks-action@master
      with: 
        authUrl: ${{ secrets.URL }}
        projectName: ${{ secrets.PROJECT }}
        domainName: ${{ secrets.DOMAIN }}
        userName: ${{ secrets.USER }}
        userDomainName: ${{ secrets.USERDOMAIN }}
        userPassword: ${{ secrets.PASSWORD }}
        clusterName: ${{ secrets.CLUSTER }}
    - name: Create Namespace
      run: |
        kubectl create namespace $GITHUB_SHA --dry-run -o yaml | kubectl apply -f -
    - name: Setup docker registry secret 
      uses: azure/k8s-actions/k8s-create-secret@master
      with:
        container-registry-url: docker.pkg.github.com
        container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        secret-name: registry-secret
        namespace: ${{ github.GITHUB_SHA }}
    - name: Patch service account to use imagePullSecret
      run: |
        kubectl patch serviceaccount default -p '{"imagePullSecrets": [{"name": "registry-secret"}]}' -n $GITHUB_SHA
    - name: Deployment 
      run: |
        sha=${GITHUB_SHA:0:7} && app="${GITHUB_REPOSITORY#*/}" && kubectl create deployment $app --image=docker.pkg.github.com/$GITHUB_REPOSITORY/$app:$sha -n $GITHUB_SHA --dry-run -o yaml | kubectl apply -f -
    - name: Delete namespace after successful test
      run: |
        kubectl delete ns $GITHUB_SHA
